buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.h2database:h2:1.4.199'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.6.1'
    }
}

plugins {
    id 'com.gradle.build-scan' version '2.0.2'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id "com.github.spotbugs" version "2.0.0"
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    publishOnFailure()
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url 'https://repo.gradle.org/gradle/libs/'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'utf-8'
        options.compilerArgs = [
            '-Xlint:-options',
            '-Xlint:deprecation',
            '-Xlint:unchecked',
            '-Werror'
        ]
    }

    tasks.withType(GroovyCompile) {
        options.encoding = 'utf-8'
        options.compilerArgs = ['-Xlint:-options']
        groovyOptions.encoding = 'utf-8'
    }
}

ext {
    devConfRoot = "$rootDir/modules/dev-kits/roll-dev-configs/src/main/resources/META-INF"
}

apply plugin: 'idea'
apply plugin: 'org.asciidoctor.convert'

apply from: "$devConfRoot/configs/docs.gradle"

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven'

    apply plugin: 'io.spring.dependency-management'

    apply from: "$devConfRoot/configs/dependencies.gradle"
    apply from: "$devConfRoot/configs/quality/codeQuality.gradle"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot:${versions.spring_boot}"
        }
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = 'io.github.spring-roll'
    // Use .RELEASE or -SNAPSHOT suffix after version code
    version = '0.1.0-SNAPSHOT'

    test {
        reports.html.enabled = false
        reports.junitXml.enabled = false
        //project unit parallel
        //maxParallelForks = 2
        //GC
        forkEvery = 100
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    dependencies {
        annotationProcessor libraries.spring_boot_configuration_processor

//                compileOnly libraries.spring_boot_starter_web,
//                            libraries.springfox

         testImplementation libraries.groovy_all,
                            libraries.groovy_dateutil,
                            libraries.spock,
                            libraries.spring_boot_starter_web,
                            libraries.spring_boot_starter_test
    }

    // spring boot configuration processor only build meta json into build folder
    // but auto complete needs it in src, so do copy after compile java task
    task cpMetaToSrc(type: Copy) {
        from 'build/classes/java/main/META-INF'
        into 'src/main/resources/META-INF'
    }
    compileJava.finalizedBy cpMetaToSrc
}