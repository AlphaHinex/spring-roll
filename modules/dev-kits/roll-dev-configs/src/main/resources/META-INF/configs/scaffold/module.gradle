// could use init-${module-name} task to initial a sub module skeleton
tasks.addRule('Pattern: init-<moduleName>') { String initModule ->
    if (initModule.startsWith('init-')) {
        task(initModule).doLast {
            def moduleName = (initModule - 'init-').toLowerCase()
            def moduleRoot = "${rootProject.projectDir}/modules/$moduleName"
            def len = moduleName.split('-').length
            // Try to remove prefix of module name to use it in package
            def pkg = len > 1 ? (len == 2 ? moduleName.split('-')[1] : moduleName.split('-')[1,len - 1].join('/')) : moduleName.replace('-', '/')
            pkg = "${rootProject.getGroup().replace('-', '').replace('.', '/')}/$pkg"

            delete(moduleRoot)
            mkdir(moduleRoot)
            mkdir("$moduleRoot/src/main/java/$pkg")
            mkdir("$moduleRoot/src/main/resources")
            mkdir("$moduleRoot/src/test/groovy/$pkg")
            mkdir("$moduleRoot/src/test/resources")

            file("$moduleRoot/${moduleName}.gradle").createNewFile()
            file("$moduleRoot/README.adoc").withWriter {
                it.write("""= $moduleName

Powered by Spring-roll""")
            }
        }
    }
}